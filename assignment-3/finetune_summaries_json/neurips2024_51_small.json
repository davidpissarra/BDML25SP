{
    "question": "<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\n<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nThe following text is noisy and dirty, so please rephrase the following text while removing noisy text (e.g., incorrect characters coming from the pdf reader, emails, footnotes, etc.), but without removing important content or adding new data, however keep as much data as possible:\n\n\"Cast, a neural network designed for high-resolution, medium-range ocean forecasting. SeaCast employs a graph- based framework to effectively handle the complex geometry of ocean grids and integrates external forcing data tailored to the regional ocean context. Our approach is validated through experiments at a high spatial resolution using the operational numerical model of the Mediterranean Sea provided by the Copernicus Marine Service, along with both numerical and data-driven atmospheric forcings. 1 Introduction Predicting sea dynamics is a formidable scientific challenge, driven by the need to understand and anticipate changes in ocean conditions that influence climate, weather forecasting, and maritime activities [ 1]. While the need for improved ocean and coastal data is global, effective decision-making in sectors like shipping, resource management, and environmental monitoring often relies on regional and localized, high-resolution models able to deliver accurate forecasts [2–7]. Recent advancements in machine learning-based weather prediction (MLWP) offer promising ap- proaches to enhancing the predictability of marine conditions. By training on extensive historical datasets, these models can uncover complex patterns and dependencies, enabling predictions that are much faster and more energy-efficient than traditional numerical solvers. Several autoregressive ML models now rival or surpass the performance of the leading physics-based models used by meteorological organizations worldwide. Among the most notable advancements are the use of Transformers [ 8–10], neural operators [ 11,12], and graph neural networks (GNNs) [ 13–15], each demonstrating significant potential in predicting atmospheric dynamics. However, the use of machine learning in ocean forecasting remains relatively nascent, and has pri- marily focused on climate emulation to date [ 16–20]. This paper presents SeaCast, an autoregressive model designed for high-resolution medium-range forecasting of regional oceans, extending the methodology from limited area weather forecasting using hierarchical GNNs [ 15]. Our approach involves several key features allowing for accurate prediction of ocean states: 1) we adapt the graph creation, training, and evaluation processes to accommodate the irregular geometry of ocean grids; Tackling Climate Change with Machine Learning: workshop at NeurIPS 2024.2) the model integrates relevant atmospheric forcing near the sea surface; and 3) boundary forcing is applied to account for water in- and outflow, ensuring compatibility with the ocean at large. In our experiments, we train SeaCast using 35 years of reanalysis data followed by 2 years of analysis data of the Mediterranean Sea. We then compare the predictive performance on analysis fields and observations against an operational numerical forecaster, evaluating how well they forecast the state of the sea on a daily basis across 18 depth levels at a high spatial resolution of 1/24°. 2 Method Problem Definition The forecasting problem is characterized by mapping a sequence of initial states X−h:0= (X−h,..., X0), where his the historical window, to a sequence of future states X1:T= (X1,..., XT), where Tis the length of the forecast. Each state Xt∈RN×dx, contains dxvariables at Nlocations represented on a grid. Variables include both those at multiple vertical levels and single-level surface measures. In addition to this, forcing inputs F1:T= (F1,..., FT) encompassing known dynamic factors relevant to the forecasting problem, are also available. Graph-based Neural Forecasting Initial states typically cover the two preceding time steps X−1:0, enabling the capture of first-order dynamics [ 14]. Concatenating a single-step forecast ˆXt=f(Xt−2:t−1, Ft)to the initial state and repeating the process with tincremented by one allows autoregressive forecasts ˆX1:Tof arbitrary length T. An integral part of this framework is mapping from Ngrid points onto a mesh graph GM= (VM,EM)coarser than the simulation domain [ 21]. The function fis implemented as a sequence of GNN layers following an encode-process-decode architecture [ 22] where: 1) grid inputs are encoded onto the mesh representation; 2) a number of GNN layers process this latent representation; 3) the processed data is mapped back onto the original grid. The mappings between grid and mesh nodes occur through bipartite grid-to-mesh GG2Mand mesh-to-grid GM2Ggraphs. All node and edge updates are facilitated through GNN layers in the form of interaction networks [23] that map to a latent dimensionality dz. Hierarchical Graph The hierarchical mesh structure described in [ 15] consists of multiple graph levelsG1,...,GL, where each level Gl= (Vl,El)gets progressively coarser. The first level connects directly to the grid, forming GG2M= (VG∪ V 1,EG2M)andGM2G= (VG∪ V 1,EM2G). A processing step on the mesh is defined as one sweep up and down through the hierarchy Gl,l+1= (\".<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n",
    "answer": "Here's the rephrased text with the noisy text removed:\n\nCast is a neural network designed for high-resolution, medium-range ocean forecasting. SeaCast employs a graph-based framework to effectively handle the complex geometry of ocean grids and integrates external forcing data tailored to the regional ocean context. Our approach is validated through experiments at a high spatial resolution using the operational numerical model of the Mediterranean Sea provided by the Copernicus Marine Service, along with both numerical and data-driven atmospheric forcings.\n\nPredicting sea dynamics is a formidable scientific challenge, driven by the need to understand and anticipate changes in ocean conditions that influence climate, weather forecasting, and maritime activities. While the need for improved ocean and coastal data is global, effective decision-making in sectors like shipping, resource management, and environmental monitoring often relies on regional and localized, high-resolution models able to deliver accurate forecasts. Recent advancements in machine learning-based weather prediction (MLWP) offer promising approaches to enhancing the predictability of marine conditions. By training on extensive historical datasets, these models can uncover complex patterns and dependencies, enabling predictions that are much faster and more energy-efficient than traditional numerical solvers. Several autoregressive ML models now rival or surpass the performance of the leading physics-based models used by meteorological organizations worldwide.\n\nAmong the most notable advancements are the use of Transformers, neural operators, and graph neural networks (GNNs), each demonstrating significant potential in predicting atmospheric dynamics. However, the use of machine learning in ocean forecasting remains relatively nascent, and has primarily focused on climate emulation to date. This paper presents SeaCast, an autoregressive model designed for high-resolution medium-range forecasting of regional oceans, extending the methodology from limited area weather forecasting using hierarchical GNNs.\n\nOur approach involves several key features allowing for accurate prediction of ocean states: 1) we adapt the graph creation, training, and evaluation processes to accommodate the irregular geometry of ocean grids; 2) the model integrates relevant atmospheric forcing near the sea surface; and 3) boundary forcing is applied to account for water inflow and outflow, ensuring compatibility with the ocean at large. In our experiments, we train SeaCast using 35 years of reanalysis data followed by 2 years of analysis data of the Mediterranean Sea. We then compare the predictive performance on analysis fields and observations against an operational numerical forecaster, evaluating how well they forecast the state of the sea on a daily basis across 18 depth levels at a high spatial resolution of 1/24°.\n\nThe forecasting problem is characterized by mapping a sequence of initial states X−h:0 = (X−h,..., X0), where h is the historical window, to a sequence of future states X1:T = (X1,..., XT), where T is the length of the forecast. Each state Xt ∈ RN×dx contains dx variables at N locations represented on a grid. Variables include both those at multiple vertical levels and single-level surface measures. In addition to this, forcing inputs F1:T = (F1,..., FT) encompassing known dynamic factors relevant to the forecasting problem are also available.\n\nGraph-based Neural Forecasting\n\nInitial states typically cover the two preceding time steps X−1:0, enabling the capture of first-order dynamics. Concatenating a single-step forecast ˆXt = f(Xt−2:t−1, Ft) to the initial state and repeating the process with t incremented by one allows autoregressive forecasts ˆX1:T of arbitrary length T. An integral part of this framework is mapping from N grid points onto a mesh graph GM = (VM, EM) coarser than the simulation domain. The function f is implemented as a sequence of GNN layers following an encode-process-decode architecture, where: 1) grid inputs are encoded onto the mesh representation; 2) a number of GNN layers process this latent representation; 3) the processed data is mapped back onto the original grid. The mappings between grid and mesh nodes occur through bipartite grid-to-mesh GG2M and mesh-to-grid GM2G graphs. All node and edge updates are facilitated through GNN layers in the form of interaction networks that map to a latent dimensionality dz.\n\nThe hierarchical mesh structure described consists of multiple graph levels G1,..., GL, where each level Gl = (Vl, El) gets progressively coarser. The first level connects directly to the grid, forming GG2M = (VG ∪ V1, EG2M) and GM2G = (VG ∪ V1, EM2G). A processing step on the mesh is defined as one sweep up and down through the hierarchy G l,l+1 = (Vl ∪ Vl+1, El ∪ El+1)."
}