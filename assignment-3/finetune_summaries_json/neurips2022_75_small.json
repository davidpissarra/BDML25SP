{
    "question": "<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\n<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nThe following text is noisy and dirty, so please rephrase the following text while removing noisy text (e.g., incorrect characters coming from the pdf reader, emails, footnotes, etc.), but without removing important content or adding new data, however keep as much data as possible:\n\n\"s, respectively. In this work, we propose FloodGNN, which is a graph neural network (GNN) for flood prediction. Compared to existing approaches, FloodGNN (i)employs a graph-based model (GNN); (ii)operates on both spatial andtemporal dimensions; and (iii)processes the water flow velocities as vector features, instead of scalar features. Experiments show that FloodGNN achieves promising results, outperforming an RNN-based baseline. 1 Introduction Climate change is driving changes in the intensity, frequency, and spatiotemporal structure of heavy precipitation, which is anticipated to increase urban flood hazard in many regions [ 1,2]. Predictive modeling can support adaptation in many ways, such as through early warning systems or by mapping hazards across space and time [ 3]. Fluid mechanics, such as the 3D Navier Stokes equations, describe the physics of flooding. In practice, urban flooding is typically modeled through simplified 2D models with sophisticated numerical methods to balance accuracy and computational costs. Recently, machine learning (ML) has been presented as an alternative to physics-based flood predic- tion models in many settings [ 4]. For instance, ML has been applied for real-time flood forecasting [5], continental-scale flood risk assessment [ 6,7], high-resolution flood extent prediction [ 8], and resource-constrained prediction [ 9]. As expected, many of these approaches apply deep learning due to their expressive power [ 10] and scalability. However, these models either focus on the spatial or the temporal dimension [ 1,11,12,13,14,15,16,17,18]. More specifically, spatial models, which are based on Convolutional Neural Networks (CNNs) or feed-forward neural networks, predict only the maximum water depth at each location. On the other hand, temporal models apply Recurrent Neural Networks (RNNs) to model the evolution of water depths over time [19, 20, 21, 22, 23].. This work investigates spatiotemporal models for flood prediction. We focus on graph (or mesh) based models, where the raster map of a region is represented as a graph with nodes/cells as locations and edges as spatial proximity. Graphs are more flexible than image-based representations, as they support irregularly-sampled cells, while still being able to capture physical relations between nearby locations [ 24]. We propose FloodGNN, a Graph Neural Network architecture for flood prediction. At each time step, FloodGNN predicts the water depths and velocities—i.e. the state of the flood—based on previous depths and velocities and also other static features. Velocities are processed as vector features using geometric vector perceptrons [ 25]. Experiments based on a simulation of Hurricane Harvey, in Houston, TX, show that FloodGNN achieves promising results in terms of accuracy. Tackling Climate Change with Machine Learning: workshop at NeurIPS 2022.2 Problem definition and approach Problem. We are given a set of regions RL={Rg}K g=1, each represented as a graph with a series of states R1 g,... RT g. At time t, a graph Rt g= (V, E)has its nodes/cells vi∈Vassociated with vector features Vt iand scalar features si. As vector features, we consider Vt i= [at i/∥at i∥,bt i/∥bt i∥]T∈ R2×2, which are velocities in the x-axis and y-axis registered at the interfaces of grid cells (See Figure 1b). As scalar features, we consider st i= (ei, ni, di,∥at i∥,∥bt i∥, wt i)T∈R6, where eiis the ground elevation, niis the Manning’s friction coefficient, and diis the distance from vito the closest river/stream— ei, ni,anddiare static. Our goal is to learn a model that, given the current state Rt gof region Rg, can predict the depth wt+1 iand velocity Vt+1 ifor each node vi∈Vat time step t+1. Flood GNN 𝒔𝑖𝑡+1,𝑽𝑖𝑡+1𝑤𝑖𝑡+1,𝒂𝑖𝑡+1,𝒃𝑖𝑡+1 𝒔𝑖𝑡,𝑽𝑖𝑡 L1 loss 𝑤𝑖𝑡+1,𝒂𝑖𝑡+1,𝒃𝑖𝑡+1 𝑅𝑔𝑡+1 Flood GNN Fixed features∥ 𝑤𝑖\".<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n",
    "answer": "Here's the rephrased text with the noisy characters and text removed:\n\nIn this work, we propose FloodGNN, a graph neural network (GNN) for flood prediction. Compared to existing approaches, FloodGNN (i) employs a graph-based model (GNN); (ii) operates on both spatial and temporal dimensions; and (iii) processes water flow velocities as vector features, instead of scalar features. Experiments show that FloodGNN achieves promising results, outperforming an RNN-based baseline.\n\n1. Introduction\n\nClimate change is driving changes in the intensity, frequency, and spatiotemporal structure of heavy precipitation, which is anticipated to increase urban flood hazard in many regions. Predictive modeling can support adaptation in many ways, such as through early warning systems or by mapping hazards across space and time. Fluid mechanics, such as the 3D Navier-Stokes equations, describe the physics of flooding. In practice, urban flooding is typically modeled through simplified 2D models with sophisticated numerical methods to balance accuracy and computational costs. Recently, machine learning (ML) has been presented as an alternative to physics-based flood prediction models in many settings. For instance, ML has been applied for real-time flood forecasting, continental-scale flood risk assessment, high-resolution flood extent prediction, and resource-constrained prediction. As expected, many of these approaches apply deep learning due to their expressive power and scalability. However, these models either focus on the spatial or the temporal dimension. More specifically, spatial models, which are based on Convolutional Neural Networks (CNNs) or feed-forward neural networks, predict only the maximum water depth at each location. On the other hand, temporal models apply Recurrent Neural Networks (RNNs) to model the evolution of water depths over time.\n\nThis work investigates spatiotemporal models for flood prediction. We focus on graph (or mesh) based models, where the raster map of a region is represented as a graph with nodes/cells as locations and edges as spatial proximity. Graphs are more flexible than image-based representations, as they support irregularly-sampled cells, while still being able to capture physical relations between nearby locations. We propose FloodGNN, a Graph Neural Network architecture for flood prediction. At each time step, FloodGNN predicts the water depths and velocities—i.e., the state of the flood—based on previous depths and velocities and also other static features. Velocities are processed as vector features using geometric vector perceptrons. Experiments based on a simulation of Hurricane Harvey, in Houston, TX, show that FloodGNN achieves promising results in terms of accuracy.\n\n2. Problem definition and approach\n\nProblem. We are given a set of regions R = {Rg}^K g=1, each represented as a graph with a series of states R1 g,..., RT g. At time t, a graph R_t g = (V, E) has its nodes/cells v_i ∈ V associated with vector features V_t i and scalar features s_i. As vector features, we consider V_t i = [a_t i / ||a_t i||, b_t i / ||b_t i||]^T ∈ R^2 × 2, which are velocities in the x-axis and y-axis registered at the interfaces of grid cells. As scalar features, we consider s_i = (e_i, n_i, d_i, ||a_t i||, ||b_t i||, w_t i)^T ∈ R^6, where e_i is the ground elevation, n_i is the Manning's friction coefficient, and d_i is the distance from v_i to the closest river/stream— e_i, n_i, and d_i are static. Our goal is to learn a model that, given the current state R_t g of region R_g, can predict the depth w_t+1 i and velocity V_t+1 i for each node v_i ∈ V at time step t+1.\n\nFloodGNN predicts w_t+1 i, V_t+1 i, w_t+1 i, a_t+1 i, b_t+1 i given s_t i, V_t i, L1 loss, w_t+1 i, a_t+1 i, b_t+1 i, R_g t+1.\n\nFloodGNN uses fixed features ∥ w_i."
}